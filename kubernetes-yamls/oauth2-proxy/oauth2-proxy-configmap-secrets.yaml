# oauth2-proxy-configmaps.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: oauth2-proxy-configs
  # 命名空間確定後，以下所列的元件都需部署在相同的命名空間中
  # Deployment、ConfigMap、Secret、Service 與 Ingress
  namespace: kube-system
data:
  # oauth2-proxy 要監聽的 IP 與連接埠
  # 0.0.0.0 預設為監聽所有 IP，若只想進行本機測試，請改為 127.0.0.1
  # 連接埠埠號需與 Deployment 中的 containerPort 相同，否則 OAuth2 流程將無法正常進行
  oauth2Proxy.listenAddr: 0.0.0.0:4180
  # Upstream 的位址，若是使用 Sidecar 模式認證單一服務的使用者，可以透過這個設定來決定其 Upstream 服務位置
  # 但由於範例是部署到 Kubernetes 叢集後透過 Ingress 進行驗證，因此這邊的 Upstream 會使用 NULL
  oauth2Proxy.upstreamAddr: file:///dev/null
  # 請將 Ingress 中所設定的 Path Prefix 一併設定到這邊
  # 若 oauth2-proxy 是執行於子網域下，且沒有使用 Ingress 的 Path Prefix 功能，則則可以忽略此設定
  oauth2Proxy.proxyPrefix: /path/prefix/to/your/svc

---
# oauth2-proxy-secrets.yaml
apiVersion: v1
kind: Secret
metadata:
  name: oauth2-proxy-secrets
  # 命名空間確定後，以下所列的元件都需部署在相同的命名空間中
  # Deployment、ConfigMap、Secret、Service 與 Ingress
  namespace: kube-system
data:
  # Identity Provider 的 客戶端 ID
  github.clientId: GITHUB_CLIENT_ID_BASE64_ENCODED
  # Identity Provider 的客戶端密碼
  github.clientSecret: GITHUB_CLIENT_SECRET_BASE64_ENCODED
  # Cookie 的加密種子
  cookie.secret: COOKIE_SECRET_BASE64_ENCODED
  # 允許存取目標服務的 Identity Provider 使用者 ID
  # 多筆使用者 ID 請用半形逗號隔開
  codeServer.allowUserId: ALLOWED_USERS_ID_BASE64_ENCODED
